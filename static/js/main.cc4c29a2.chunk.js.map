{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setrecipes","search","setSearch","query","setquery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","typeof","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAmBeA,EAjBF,SAAC,GACb,IADcC,EACf,EADeA,MAAMC,EACrB,EADqBA,SAASC,EAC9B,EAD8BA,MAAMC,EACpC,EADoCA,YAEhC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,6BAAKR,IACL,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCmD1CC,EA7DL,WAEV,IAFc,EAMcC,mBAAS,IANvB,mBAMPC,EANO,KAMEC,EANF,OAOWF,mBAAS,IAPpB,mBAOPG,EAPO,KAOAC,EAPA,OAQUJ,mBAAS,SARnB,mBAQPK,EARO,KAQAC,EARA,KAWdC,qBAAU,WACTC,MACC,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,mCAAD,OAAoCL,EAApC,mBAdhB,WAcgB,oBAbf,qCAYK,cACXM,EADW,gBAECA,EAASC,OAFV,OAEXC,EAFW,OAGnBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJE,2CAAH,qDAmBd,OACE,sBAAKvB,UAAU,MAAf,UACA,uBAAM0B,SARO,SAAAC,GACfA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKoBb,UAAU,cAAtC,UACE,uBAAQA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAd5C,SAAAJ,GAClBd,EAAUc,EAAEK,OAAOF,UAcf,wBAAS9B,UAAU,gBAAgBiC,OAAO,SAA1C,uBAIF,qBAAKjC,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACtBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJxBG,EAAOA,OAAOgC,gBCpCVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBChBAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.cc4c29a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\nconst Recipe=({title,calories,image,ingredients})=>\r\n{\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient=>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <h1>{calories}</h1>\r\n            <img className={style.image} src={image} alt=\"\"></img>\r\n          \r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Recipe;","\nimport React,{useEffect, useState} from \"react\";\nimport Recipe from './Recipe';\nconst App=()=>{\n\nconst APP_ID='3691f2d8';\nconst APP_KEY='7784fbb85c533a4e66d5aa81cb333e82';\n\n\nconst [recipes, setrecipes]=useState([]);\nconst [search,setSearch]=useState('');\nconst [query, setquery]=useState('pizza');\n\n\nuseEffect(()=>{\n getRecipes()\n},[query]);\n\nconst getRecipes = async() => {\n  const response= await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n  const data= await response.json();\nsetrecipes(data.hits);\nconsole.log(data.hits);\n\n\n}\nconst updatesearch= e =>{\n  setSearch(e.target.value);\n \n\n}\nconst getSearch= e =>{\n  e.preventDefault();\n  setquery(search);\n  setSearch('');\n}\n\n  return (\n    <div className=\"App\">\n    <form onSubmit ={getSearch} className=\"search-form\">\n      <input  className=\"search-bar\" type=\"text\" value={search} onChange={updatesearch}></input>\n      <button  className=\"search-button\" typeof=\"Submit\">\n      Search\n      </button>\n    </form>\n    <div className=\"recipes\">\n    {recipes.map(recipe=>(\n      <Recipe \n      key={recipe.recipe.label}\n      title={recipe.recipe.label} \n      calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        \n      />\n      \n\n    ))}\n    </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1JsJC\",\"image\":\"recipe_image__2Uj6o\"};"],"sourceRoot":""}